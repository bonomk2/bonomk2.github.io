<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[Django Tutorial 3 (작성중)]]></title>
      <url>http://www.bonobono.net/python/django/Django-Tutorial-3/</url>
      <content type="html"><![CDATA[<p>이때 갑자기 나오는 배포… ㄷㄷㄷㄷㄷㄷㄷㄷ</p>
<p>장고걸스 튜터리얼이 적응이 잘 안되네…<br>장고 사이트에 있는 튜토리얼상으로는 뷰가 먼저인듯한데…<br>뭐 여튼 </p>
<h1 id="배포"><a href="#배포" class="headerlink" title="배포"></a>배포</h1><p>여튼 해당 내용은 패스…<br>다만 static 파일을 별도로 꺼내오는 부분이 있어 이 부분만 잠깐 언급하자면..</p>
<h2 id="정적파일-모으기"><a href="#정적파일-모으기" class="headerlink" title="정적파일 모으기"></a>정적파일 모으기</h2><p>정적인 파일을 별도의 static 폴더로 뺄 수 있는 기능인듯하다..</p>
<p>python manage.py collectstatic 으로 동작</p>
<pre>
(myenv)~/workspace/django$ python manage.py collectstatic
</pre>

<p>실행하면 정적 파일들을 static 폴더에 쭉 뽑아낸다..<br>웹서버로 보내기 위한 용도인거 같은데 자세한건 나중에 보면 알겠지..</p>
<p>================================================<br>이후 마저 작성예정…</p>
<h1 id="urls"><a href="#urls" class="headerlink" title="urls"></a>urls</h1><h1 id="View"><a href="#View" class="headerlink" title="View"></a>View</h1>]]></content>
      
        <categories>
            
            <category> python </category>
            
            <category> django </category>
            
        </categories>
        
        
        <tags>
            
            <tag> python </tag>
            
            <tag> django </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Django Tutorial 2]]></title>
      <url>http://www.bonobono.net/python/django/Django-Tutorial-2/</url>
      <content type="html"><![CDATA[<p>이전 내용에 이어서 쭉~~~</p>
<h1 id="Model"><a href="#Model" class="headerlink" title="Model"></a>Model</h1><p>데이터베이스의 스키마를 정의하고 테이블을 생성한 후, 외부에서 정의한 인터페이스로 데이터를<br>주고 받도록 하는 역할로 추측됨..<br>추후 동작에 대한 머릿속 정리가 되면 내용을 수정할 예정.. 내가 써놓고도 이해가 안감..</p>
<h2 id="어플리케이션-생성"><a href="#어플리케이션-생성" class="headerlink" title="어플리케이션 생성"></a>어플리케이션 생성</h2><p>python manage.py startapp [AppName] 의 형태로 어플리케이션을 생성한다.</p>
<pre>
(myenv)~/workspace/django$ python manage.py startapp blog
</pre>

<p>mysite/setting.py를 열어 INSTALLED_APPS 항목에 blog를 추가하여 APP을 알려준다.</p>
<pre class=" language-python"><code class="language-python">
INSTALLED_APPS <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token string">'django.contrib.admin'</span><span class="token punctuation">,</span>
    <span class="token string">'django.contrib.auth'</span><span class="token punctuation">,</span>
    <span class="token string">'django.contrib.contenttypes'</span><span class="token punctuation">,</span>
    <span class="token string">'django.contrib.sessions'</span><span class="token punctuation">,</span>
    <span class="token string">'django.contrib.messages'</span><span class="token punctuation">,</span>
    <span class="token string">'django.contrib.staticfiles'</span><span class="token punctuation">,</span>
    <span class="token string">'blog'</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span>
</code></pre>

<h2 id="모델-정의"><a href="#모델-정의" class="headerlink" title="모델 정의"></a>모델 정의</h2><p>blog/models.py 파일을 아래와 같이 작성한다.</p>
<pre class=" language-python"><code class="language-python">
<span class="token keyword">from</span> django<span class="token punctuation">.</span>db <span class="token keyword">import</span> models
<span class="token keyword">from</span> django<span class="token punctuation">.</span>utils <span class="token keyword">import</span> timezone

<span class="token keyword">class</span> <span class="token class-name">Post</span><span class="token punctuation">(</span>models<span class="token punctuation">.</span>Model<span class="token punctuation">)</span><span class="token punctuation">:</span>
    author <span class="token operator">=</span> models<span class="token punctuation">.</span>ForeignKey<span class="token punctuation">(</span><span class="token string">'auth.User'</span><span class="token punctuation">)</span>
    title <span class="token operator">=</span> models<span class="token punctuation">.</span>CharField<span class="token punctuation">(</span>max_length<span class="token operator">=</span><span class="token number">200</span><span class="token punctuation">)</span>
    text <span class="token operator">=</span> models<span class="token punctuation">.</span>TextField<span class="token punctuation">(</span><span class="token punctuation">)</span>
    create_date <span class="token operator">=</span> models<span class="token punctuation">.</span>DateTimeField<span class="token punctuation">(</span>default<span class="token operator">=</span>timezone<span class="token punctuation">.</span>now<span class="token punctuation">)</span>
    publish_date <span class="token operator">=</span> models<span class="token punctuation">.</span>DateTimeField<span class="token punctuation">(</span>blank<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> null<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">publish</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>published_date <span class="token operator">=</span> timezone<span class="token punctuation">.</span>now<span class="token punctuation">(</span><span class="token punctuation">)</span>
        self<span class="token punctuation">.</span>save<span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">def</span> <span class="token function">__str__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> self<span class="token punctuation">.</span>title
</code></pre>

<p>유의할점은 Post는 첫글자를 대문자로..<br>models.Model 값은 장고 모델임을 의미한단다..<br>자세한 내용은 Document ( <a href="https://docs.djangoproject.com/en/1.11/ref/models/" target="_blank" rel="external">https://docs.djangoproject.com/en/1.11/ref/models/</a> )를 참고</p>
<h2 id="테이블-만들기"><a href="#테이블-만들기" class="headerlink" title="테이블 만들기"></a>테이블 만들기</h2><p>python manage.py makemigrations [AppName] 를 사용하여 정의한 모델을 생성</p>
<pre>
(myenv)~/workspace/django$ python manage.py makemigrations blog
Migrations for 'blog':
  blog\migrations\0001_initial.py
    - Create model Post
</pre>

<p>python manage.py migrate [AppName] 을 사용하여 마이그레이션..</p>
<pre>
(myenv)~/workspace/django$ python manage.py migrate blog
Operations to perform:
  Apply all migrations: blog
Running migrations:
  Applying blog.0001_initial... OK
</pre>

<p>실행하면 디비테이블이 생성된다고 한다..<br>눈에 보이는게 없으니….. 답답하구나…..</p>
<h1 id="Admin"><a href="#Admin" class="headerlink" title="Admin"></a>Admin</h1><h2 id="관리자-구동"><a href="#관리자-구동" class="headerlink" title="관리자 구동"></a>관리자 구동</h2><p>앞서 생성한 모델(?)을 admin에 등록해야 하는듯…<br>blog/admin.py 파일에 아래와 같이 작성한다.</p>
<pre class=" language-python"><code class="language-python">
<span class="token keyword">from</span> django<span class="token punctuation">.</span>contrib <span class="token keyword">import</span> admin
<span class="token keyword">from</span> <span class="token punctuation">.</span>models <span class="token keyword">import</span> Post

admin<span class="token punctuation">.</span>site<span class="token punctuation">.</span>register<span class="token punctuation">(</span>Post<span class="token punctuation">)</span>
</code></pre>

<p>파일 작성후 서버를 구동하고 브라우저로 접속</p>
<pre>
(myenv)~/workspace/django$ python manage.py runserver
Performing system checks...

System check identified no issues (0 silenced).
April 06, 2017 - 16:53:09
Django version 1.11, using settings 'mysite.settings'
Starting development server at http://127.0.0.1:8000/
Quit the server with CTRL-BREAK.
</pre>

<p><a href="http://127.0.0.1:8000/admin" target="_blank" rel="external">http://127.0.0.1:8000/admin</a> 으로 접속</p>
<img src="/python/django/Django-Tutorial-2/01_run.png" alt="01_run.png" title="">
<p>근데 계정을 모른다… 슈퍼유저를 새로 생성한다..<br>작업 순서가 오째 나와는 좀 안맞…. -_-;;</p>
<pre>
(myenv)~/workspace/django$ python manage.py createsuperuser
Username (leave blank to use 'bonobono'): bonobono
Email address: me@bonobono.net
Password:
Password (again):
Superuser created successfully.
</pre>

<p>다시 접속하여 ID/PASS 를 입력하면 로그인이 된다.</p>
<img src="/python/django/Django-Tutorial-2/02_admin.png" alt="02_admin.png" title="">
<p>오… 신기신기..</p>
<p>관리자에 생성된 Posts를 클릭하여 글을 작성하고 수정해본다..</p>
<img src="/python/django/Django-Tutorial-2/03_posting.png" alt="03_posting.png" title="">
<p>admin과 관련한 내용은 <a href="https://docs.djangoproject.com/en/1.11/ref/contrib/admin/" target="_blank" rel="external">https://docs.djangoproject.com/en/1.11/ref/contrib/admin/</a> 를 참고</p>
<p>지금까지 한 내용을 쭉 따라 왔다면 지금 내가 느끼는 감정과 동일할거라 생각한다..<br>Admin은 뭐하는 놈이고.. 그래서 어떻게 개발해서 동작하는건데.. 라는..<br>강좌를 더 보다보면 답이 나오겠지… -_-;;;;</p>
]]></content>
      
        <categories>
            
            <category> python </category>
            
            <category> django </category>
            
        </categories>
        
        
        <tags>
            
            <tag> python </tag>
            
            <tag> django </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Django Tutorial 1]]></title>
      <url>http://www.bonobono.net/python/django/Django-Tutorial-1/</url>
      <content type="html"><![CDATA[<p>홈페이지를 몇개 만들일이 있어서 요즘 이것저것 찾아보고 있다..<br>서버쪽은 Spring4, nodejs+express 를 봤는데… 아직까지 뭔가 맘에 안들어 python도 좀 봐야 할듯..<br>회사에서도 조만간 쓸일이 있을듯하니 겸사겸사 한번 짚고 넘어가는것이 좋을것 같다.</p>
<p>python은 hudson 돌리면서 텍스트 변경하고 하는것들이 해본것의 전부라서<br>제대로 익히려면 시간이 좀 걸릴거 같다… ES6도 아직 제대로 안 익힌 마당에 다 까먹겠… -_-;;</p>
<p>기본적인 튜토리얼은 장고걸스( <a href="https://tutorial.djangogirls.org/ko" target="_blank" rel="external">https://tutorial.djangogirls.org/ko</a> )를 기초로 작성하였고,<br>서버에 대한 내용만 쭉 작성할 예정이다.. 화면은 별도 포스팅으로…</p>
<h1 id="Python-설치"><a href="#Python-설치" class="headerlink" title="Python 설치"></a>Python 설치</h1><p>설치는 그냥 설치하자…. 회사에서 작업하다보니 나중에 우분투로 옮길것도 감안해야하는데..<br>우선은 기능 테스트만 몇가지 정도 해보면 되니까… 자세한 내용은 패스~!!</p>
<h1 id="Django-설치"><a href="#Django-설치" class="headerlink" title="Django 설치"></a>Django 설치</h1><h2 id="가상환경-설정"><a href="#가상환경-설정" class="headerlink" title="가상환경 설정"></a>가상환경 설정</h2><p>가상환경(virtualenv)을 왜 만들고 어디다 써먹는지는 나중에 자세히 알아보련다..<br>우선은 튜토리얼에 있는대로 진행….</p>
<ul>
<li>가상환경을 생성</li>
</ul>
<pre><code>~&#x2F;workspace&#x2F;django$ python -m venv myvenv</code></pre>
<p>실행하면 django 폴더내에 myvenv 라는 폴더가 생성되고 거기에 기본 정보들이 셋팅된다..</p>
<ul>
<li>가상환경 실행</li>
</ul>
<pre><code>~&#x2F;workspace&#x2F;django$ myvenv&#x2F;Scripts&#x2F;activate
(myenv)~&#x2F;workspace&#x2F;django$</code></pre>
<p>생성한 가상환경을 activate 시키는것 같은데… 여튼 실행하면 앞에 생성한 가상환경 명이 붙는다.</p>
<h2 id="장고-설치"><a href="#장고-설치" class="headerlink" title="장고 설치"></a>장고 설치</h2><p>pip를 이용해서 장고를 설치..</p>
<pre><code>(myenv)~&#x2F;workspace&#x2F;django$ pip install django
...
(myenv)~&#x2F;workspace&#x2F;django$</code></pre>
<h1 id="프로젝트-생성"><a href="#프로젝트-생성" class="headerlink" title="프로젝트 생성"></a>프로젝트 생성</h1><h2 id="프로젝트-생성하기"><a href="#프로젝트-생성하기" class="headerlink" title="프로젝트 생성하기"></a>프로젝트 생성하기</h2><p>django-admin을 사용하여 mysite라는 프로젝트를 생성한다. </p>
<pre><code>(myenv)~&#x2F;workspace&#x2F;django$ django-admin startproject mysite .</code></pre>
<p>동작후에는 mysite라는 폴더가 생성되고 거기에 설정들이 들어가 있음..</p>
<h2 id="프로젝트-설정-변경"><a href="#프로젝트-설정-변경" class="headerlink" title="프로젝트 설정 변경"></a>프로젝트 설정 변경</h2><p>mysite/setting.py 파일을 수정하여 TIME_ZONE을 수정하고, Static 경로를 최하단에 추가로 설정한다.<br>데이터베이스는 기본으로 sqlite3가 설정되어 있다는 DATABASES 값을 참고..</p>
<pre><code>TIME_ZONE = &#39;Asia&#x2F;Seoul&#39;
...
STATIC_ROOT = os.path.join(BASE_DIR, &#39;static&#39;)</code></pre>
<p>이후에 변경된 설정을 migrate 시킴</p>
<pre><code>(myenv)~&#x2F;workspace&#x2F;django$ python manage.py migrate</code></pre>
<h1 id="서버-기동"><a href="#서버-기동" class="headerlink" title="서버 기동"></a>서버 기동</h1><p>서버를 실행</p>
<pre><code>(myenv)~&#x2F;workspace&#x2F;django$ python manage.py runserver
System check identified no issues (0 silenced).
April 05, 2017 - 21:14:31
Django version 1.11, using settings &#39;mysite.settings&#39;
Starting development server at http:&#x2F;&#x2F;127.0.0.1:8000&#x2F;
Quit the server with CTRL-BREAK.</code></pre>
<p>실행후 브라우저 확인<br><img src="/python/django/Django-Tutorial-1/01_run.png" alt="01_run.png" title=""></p>
<p>첫 포스팅이니까.. 오늘은 여기까지… 잇힝~!!</p>
]]></content>
      
        <categories>
            
            <category> python </category>
            
            <category> django </category>
            
        </categories>
        
        
        <tags>
            
            <tag> python </tag>
            
            <tag> django </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hello World2]]></title>
      <url>http://www.bonobono.net/test/hexo/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<p>한글도 잘 되는지 어디 봅시다~!!</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span>
</code></pre>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server
</code></pre>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate
</code></pre>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy
</code></pre>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
      
        <categories>
            
            <category> test </category>
            
            <category> hexo </category>
            
        </categories>
        
        
        <tags>
            
            <tag> test </tag>
            
            <tag> hexo </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Test Category]]></title>
      <url>http://www.bonobono.net/test/hexo/test-category/</url>
      <content type="html"><![CDATA[<h1 id="Test-Category-page"><a href="#Test-Category-page" class="headerlink" title="Test Category page"></a>Test Category page</h1><h2 id="SubCategory"><a href="#SubCategory" class="headerlink" title="SubCategory"></a>SubCategory</h2><p>!<br><img src="test_01.jpg" alt=""></p>
<p>asset<br><img src="/test/hexo/test-category/test_01.jpg" alt="test_01.jpg" title=""></p>
]]></content>
      
        <categories>
            
            <category> test </category>
            
            <category> hexo </category>
            
        </categories>
        
        
        <tags>
            
            <tag> test </tag>
            
            <tag> hexo </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Test Asset]]></title>
      <url>http://www.bonobono.net/test/hexo/test-asset/</url>
      <content type="html"><![CDATA[<p>path : test_01<br>/test/hexo/test-asset/test_01.jpg</p>
<p></p><p><br>asset_img : test_02<br><img src="/test/hexo/test-asset/test_02.jpg" alt="test_02.jpg" title=""></p>
<p></p><p><br>asset_img : /images/test_04<br></p>
<p></p><p><br>test_03<br>link : test_03<br><a href="/test/hexo/test-asset/test_03.jpg" title="test_03.jpg">test_03.jpg</a><br>절대경로 : test_04<br><img src="/images/test_04.jpg" alt=""><br>asset 절대경로 : test_05<br>test_05 -&gt; fail<br><br>fail시 처리 : test_06<br><img src="/images/test_08.jpg" alt="fail image"></p>
]]></content>
      
        <categories>
            
            <category> test </category>
            
            <category> hexo </category>
            
        </categories>
        
        
        <tags>
            
            <tag> test </tag>
            
            <tag> hexo </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Test Private]]></title>
      <url>http://www.bonobono.net/test/hexo/test-private/</url>
      <content type="html"></content>
      
        <categories>
            
            <category> test </category>
            
            <category> hexo </category>
            
        </categories>
        
        
        <tags>
            
            <tag> test </tag>
            
            <tag> hexo </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Test Tag Cloud]]></title>
      <url>http://www.bonobono.net/test/hexo/test-tag-cloud/</url>
      <content type="html"></content>
      
        <categories>
            
            <category> test </category>
            
            <category> hexo </category>
            
        </categories>
        
        
        <tags>
            
            <tag> test </tag>
            
            <tag> hexo </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Test Gallery]]></title>
      <url>http://www.bonobono.net/test/hexo/test-gallery/</url>
      <content type="html"></content>
      
        <categories>
            
            <category> test </category>
            
            <category> hexo </category>
            
        </categories>
        
        
        <tags>
            
            <tag> test </tag>
            
            <tag> hexo </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Test Links]]></title>
      <url>http://www.bonobono.net/test/hexo/test-links/</url>
      <content type="html"></content>
      
        <categories>
            
            <category> test </category>
            
            <category> hexo </category>
            
        </categories>
        
        
        <tags>
            
            <tag> test </tag>
            
            <tag> hexo </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[테스트 포스트]]></title>
      <url>http://www.bonobono.net/test/hexo/test-post/</url>
      <content type="html"><![CDATA[<h1 id="안녕-hexo"><a href="#안녕-hexo" class="headerlink" title="안녕 hexo"></a>안녕 hexo</h1><h2 id="hexo-cool"><a href="#hexo-cool" class="headerlink" title="hexo cool"></a>hexo cool</h2><h3 id="really"><a href="#really" class="headerlink" title="really?"></a>really?</h3><ul>
<li>write</li>
<li>content</li>
<li>with</li>
<li>markdown</li>
</ul>
<h1 id="Front-matter"><a href="#Front-matter" class="headerlink" title="Front-matter"></a>Front-matter</h1><p>See front-matter for more information.</p>
<p>Setting    Description    Default<br>layout    Layout<br>title    Title<br>date    Published date    File created date<br>update    Updated date    File updated date<br>comments    Enables comment feature for the post    true<br>tags    Tags (Not available for pages)<br>categories    Categories (Not available for pages)<br>permalink    Override the default permalink of the post<br>toc    Display TOC button    true<br>comment    Display comment    true<br>notag    Do not generate Tags menu    false<br>top    Pin post on the top of the list</p>
<h1 id="table-sample"><a href="#table-sample" class="headerlink" title="table sample"></a>table sample</h1><table><br>    <tr><br>        <td colspan="2" align="center">Foo</td><br>    </tr><br>    <tr><br>        <td>Foo</td><br>        <td>Foo</td><br>    </tr><br>    <tr><br>        <td>Foo</td><br>        <td>Foo</td><br>    </tr><br></table>


<h1 id="pre-tag"><a href="#pre-tag" class="headerlink" title="pre tag"></a>pre tag</h1><pre>
이곳에 소스를 적는것인데 syntax highlight가 정상 동작하는지를 모르겠다는.. ㄷㄷㄷ
</pre>

<h1 id="Block-Quote"><a href="#Block-Quote" class="headerlink" title="Block Quote"></a>Block Quote</h1><ul>
<li><p>인자없음</p>
<blockquote><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem.</p>
</blockquote>
</li>
<li><p>책 인용</p>
<blockquote><p>Do not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.</p>
<footer><strong>David Levithan</strong><cite>Wide Awake</cite></footer></blockquote>
</li>
<li><p>트위터 인용</p>
<blockquote><p>NEW: DevDocs now comes with syntax highlighting. <a href="http://devdocs.io" target="_blank" rel="external">http://devdocs.io</a></p>
<footer><strong>@DevDocs</strong><cite><a href="https://twitter.com/devdocs/status/356095192085962752" target="_blank" rel="external">twitter.com/devdocs/status/356095192085962752</a></cite></footer></blockquote>
</li>
<li><p>웹게시물</p>
<blockquote><p>Every interaction is both precious and an opportunity to delight.</p>
<footer><strong>Seth Godin</strong><cite><a href="http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html" target="_blank" rel="external">Welcome to Island Marketing</a></cite></footer></blockquote>
</li>
</ul>
<h1 id="Code-Block"><a href="#Code-Block" class="headerlink" title="Code Block"></a>Code Block</h1><ul>
<li><p>기본</p>
<pre><code>alert(&#39;Hello World!&#39;);</code></pre>
</li>
<li><p>언어지정</p>
<pre><code>[rectangle setX: 10 y: 10 width: 20 height: 20];</code></pre>
<pre><code>&lt;script&gt;
console.log(&#39;1111&#39;);
&lt;&#x2F;script&gt;</code></pre>
</li>
<li><p>url, 제목 넣기</p>
<pre><code>array.map(callback[, thisArg])</code></pre>
<pre><code>_.compact([0, 1, false, 2, &#39;&#39;, 3]);
=&gt; [1, 2, 3]</code></pre>
</li>
<li><p>hexo-prism-plugin 사용</p>
</li>
</ul>
<p>test.js</p>
<pre class=" language-javascript"><code class="language-javascript">
<span class="token comment" spellcheck="true">/** comment **/</span>
<span class="token comment" spellcheck="true">// comment2</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'1111'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'~~'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">testA</span><span class="token punctuation">(</span>aa<span class="token punctuation">)</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>aa<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">testA</span><span class="token punctuation">(</span><span class="token string">'aaaa'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre>


<h1 id="jsFiddle"><a href="#jsFiddle" class="headerlink" title="jsFiddle"></a>jsFiddle</h1><iframe scrolling="no" width="100%" height="300" src="http://jsfiddle.net/pgtkkLsc/embedded/html,result/light" frameborder="0" allowfullscreen></iframe>
<h1 id="Gist"><a href="#Gist" class="headerlink" title="Gist"></a>Gist</h1><script src="//gist.github.com/9a4aded78853db541ca2510d8d41e17f.js"></script>
<h1 id="iframe"><a href="#iframe" class="headerlink" title="iframe"></a>iframe</h1><iframe src="http://www.iniline.co.kr" width="100%" height="300" frameborder="0" allowfullscreen></iframe>
<h1 id="YouTube"><a href="#YouTube" class="headerlink" title="YouTube"></a>YouTube</h1><div class="video-container"><iframe src="//www.youtube.com/embed/AOMBPyOlFSE" frameborder="0" allowfullscreen></iframe></div>
<h1 id="vimeo"><a href="#vimeo" class="headerlink" title="vimeo"></a>vimeo</h1><div class="video-container"><iframe src="//player.vimeo.com/video/167976188" frameborder="0" allowfullscreen></iframe></div>
<h1 id="post-삽입"><a href="#post-삽입" class="headerlink" title="post 삽입"></a>post 삽입</h1>
<h1 id="raw"><a href="#raw" class="headerlink" title="raw"></a>raw</h1>
content
<javascript>alert('!!!');

</javascript>]]></content>
      
        <categories>
            
            <category> test </category>
            
            <category> hexo </category>
            
        </categories>
        
        
        <tags>
            
            <tag> test </tag>
            
            <tag> hexo </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
